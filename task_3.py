"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел. Проверить
работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо только числами.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами выводится на
экран.
Подсказка: для этого задания примем, что пользователь может вводить только числа и строки. Во время ввода пользователем
очередного элемента необходимо реализовать проверку типа элемента. Вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. При
этом работа скрипта не должна завершаться.
"""


class MyErr0(Exception):
    def __init__(self, txt):
        self.txt = txt


histr_arr = []
while_break = False

while not while_break:
    inp_str = input("::> ")

    data_arr = inp_str.split(" ")
    for el in data_arr:
        if el == "stop":
            while_break = True
            break
        try:
            if not el.isnumeric():
                raise MyErr0(f"'{el}' не число!")
            inp_num = int(el)
        except MyErr0 as err:
            print("ОШИБКА:", err)
        else:
            histr_arr.append(inp_num)

print(histr_arr)
